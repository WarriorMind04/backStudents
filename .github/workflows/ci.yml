name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - run: npm ci
      - run: npm run lint
        # Asegúrate de tener un script "lint" en package.json, e.g., "eslint ."

  test:
    runs-on: ubuntu-latest
    needs: lint # Solo ejecuta test si lint pasa
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - run: npm ci
      - run: npm test
        # Asegúrate de tener un script "test" en package.json, e.g., "jest"

  build-and-run:
    runs-on: ubuntu-latest
    needs: test # Solo ejecuta si test pasa
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - run: npm ci
      - run: npm run build # Si tienes un script de build (opcional)
      - run: npm start & # Inicia el servidor en segundo plano
      - run: sleep 5 # Espera a que el servidor arranque
      - run: curl http://localhost:3000/students # Verifica que el endpoint responde
        name: Check server health

  notify: # Opcional: notificación en caso de fallo
    runs-on: ubuntu-latest
    needs: [lint, test, build-and-run]
    if: failure()
    steps:
      - run: echo "CI pipeline failed! Check the logs for details."
